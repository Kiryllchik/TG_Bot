import logging
import telebot
from telebot import types
import datetime
import time
import sqlite3
from keep_alive import keep_alive

keep_alive()
logging.basicConfig(level = logging.INFO)

bot = telebot.TeleBot('6646599481:AAGmgYzg4ycfTJDjOAjgKr8MMeoGm8PTWf4')

#button.add(types.InlineKeyboardButton('', callback_data=''))
#bot.send_message(message.chat.id, '')
#bot.send_message(message.chat.id, '')

def insert(message):
    global conn, cursor, idn
    idn = message.from_user.username
    conn = sqlite3.connect('base.bd')
    cursor = conn.cursor()
    cursor.execute(f'CREATE TABLE IF NOT EXISTS {idn} 
                   (new_words TEXT, 
                   data_new_words DATA, 
                   data_next_rep DATA, 
                   amount_of_rep INTEGER, 
                   complete_words TEXT)')
    conn.commit()

def curr_date():
    global current_date
    current_date = datetime.datetime.now().strftime("%d.%m.%y %I:%M:%S PM")
    

'''–ö–û–ú–ê–î–ù–ê /WORDS'''
@bot.message_handler(commands=['words'])
def words(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å —Å–ª–æ–≤–æ, —è–∫–µ —Ö–æ—á–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç–∏ (–∞–±–æ "end", —â–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏): ')
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    bot.register_next_step_handler(message, process_words)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –î–û–î–ê–í–ê–ù–ù–Ø –ù–û–í–ò–• –°–õ–Ü–í
def process_words(message):
    if message.text.lower() == 'end':
        # –ö–æ–º–∞–Ω–¥–∞ "end" –∑–∞–≤–µ—Ä—à—É—î –≤–≤–µ–¥–µ–Ω–Ω—è —Å–ª—ñ–≤
        show_words(message)
    else:
        insert(message)
        cursor.execute(f'SELECT new_words FROM {idn} WHERE new_words = ?', (message.text,))
        existing_word = cursor.fetchone()

        if existing_word:
            bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{message.text}" –≤–∂–µ —î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.')
        else:
            # –î–æ–¥–∞—î–º–æ —Å–ª–æ–≤–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
            curr_date()
            cursor.execute(f'INSERT INTO {idn} (new_words, data_new_words, amount_of_rep,) VALUES (?, ?, ?)', (message.text, current_date, 0,))
            conn.commit()
            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª–æ–≤–∞
            bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{message.text}" —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.')
            # –ó–∞–ø–∏—Ç –Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å —â–µ –æ–¥–Ω–µ —Å–ª–æ–≤–æ (–∞–±–æ "end", —â–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏): ')
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        bot.register_next_step_handler(message, process_words)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø –î–û–î–ê–ù–ò–• –°–õ–Ü–í –°–¨–û–ì–û–î–ù–Ü
@bot.message_handler(commands=['added_today'])
def show_words(message):
    insert(message)
    curr_date()
    cursor.execute(f'SELECT new_words FROM {idn} WHERE complete_words IS NULL AND data_new_words = {current_date}')
    data = cursor.fetchall()
    words = [word[0] for word in data]
    if words and all(word is not None and isinstance(word, str) for word in words):
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ª–æ–≤–∞, —è–∫—â–æ –≤–æ–Ω–∏ –±—É–ª–∏ –¥–æ–¥–∞–Ω—ñ
        bot.send_message(message.chat.id, f'–°–ª–æ–≤–∞, —è–∫—ñ –≤–∏ –¥–æ–±–∞–≤–∏–ª–∏ —Å—å–æ–≥–æ–¥–Ω—ñ:\n' + '\n'.join(words))
    else:
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–µ –±—É–ª–æ –¥–æ–¥–∞–Ω–∏—Ö —Å–ª—ñ–≤
        bot.send_message(message.chat.id, '–ù–∞ –∂–∞–ª—å, —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –Ω–µ –¥–æ–¥–∞–ª–∏ –∂–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞.')
    # –î—ñ–∑–Ω–∞—é—Å—å —è–∫–∏–π —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –∑ 365
    daysend = current_date.timetuple().tm_yday
    goal = 300
    button = types.InlineKeyboardMarkup()
    button.add(types.InlineKeyboardButton('–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–∞', callback_data='rep_word'))


    cursor.execute(f'SELECT complete_words FROM {idn} WHERE new_words IS NULL')
    complete = cursor.fetchall()
    bot.send_message(message.chat.id, '///–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–∏—Ö —Ü—ñ–ª–µ–π, —É —Ä–æ–∑—Ä–æ–±—Ü—ñ///')
    words = [word[0] for word in complete]
    bot.send_message(message.chat.id, '–¢–≤–æ—è —Ü—ñ–ª—å –≤—á–∏—Ç–∏ 5 —Å–ª—ñ–≤ —É –¥–µ–Ω—å. –¢–æ–¥—ñ —Ç–∏ –∑–º–æ–∂–µ—à –¥–æ –∫—ñ–Ω—Ü—è —Ä–æ–∫—É –≤–∏–≤—á–∏—Ç–∏ –±—ñ–ª—å—à–µ –Ω—ñ–∂ 300 —Å–ª—ñ–≤üòçüòò\n –ü—Ä–∏–±–ª–∏–∑–Ω–æ –∑–∞ 60 –¥–Ω—ñ–≤ü•≥ \n –°–ª–æ–≤–∞ —Ç—Ä–µ–±–∞ –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ —ñ —Ç–∏ —Ü–µ –±—É–¥–µ—à —Ä–æ–±–∏—Ç–∏ 5 —Ä–∞–∑—ñ–≤ –¥–ª—è —Å–ª–æ–≤–∞, –∞ —Ç–∞–∫–æ–∂ –±—É–¥–µ—à –ø—Ä–∏–¥—É–º—É–≤–∞—Ç–∏ –¥–æ –Ω—å–æ–≥–æ —Ä–µ—á–µ–Ω–Ω—è.')
    bot.send_message(message.chat.id, f'–î–æ –∫—ñ–Ω—Ü—è —Ä–æ–∫—É <b>{str(365 - int(daysend))}</b>', parse_mode='html')

    bot.send_message(message.chat.id, f'–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–≤—á–µ–Ω–∏—Ö —Å–ª—ñ–≤: <b>{str(len(words))}</b>', parse_mode='html')
    bot.send_message(message.chat.id, f'–©–µ —Ç—Ä–µ–±–∞ –≤–∏–≤—á–∏—Ç–∏ —Å–ª—ñ–≤: <b>{str(int(goal)-int(len(words)))}</b>', parse_mode='html', reply_markup=button)
    cursor.close()
    conn.close()

#–ü–û–ö–ê–ó–ê–¢–ò, –¢–ï –©–û –í–ß–ò–®
@bot.message_handler(commands=['learn'])
def new_words(message):
    insert(message)
    cursor.execute(f'SELECT new_words, data_next_rep, amount_of_rep FROM {idn} WHERE complete_words IS NULL')
    complete = cursor.fetchall()
    for row in complete:
        wordo = row[0]
        data_next_repeat = row[1]
        amount = row[2]

    message_text = (f"–°–ª–æ–≤–æ: {wordo}\n"
                    f"–ù–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è: {data_next_repeat}\n"
                    f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω—å: {amount}\n"
                    "__________")
    # –û–±'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞ —Ä—è–¥–∫—ñ–≤ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è
    bot.send_message(message.chat.id, f'–°–ª–æ–≤–∞, —è–∫—ñ —Ç–∏ –≤—á–∏—à:\n{message_text}')

#–ü–û–ö–ê–ó–ê–¢–ò –¢–ï, –©–û –ú–û–ñ–ù–ê –°–¨–û–ì–û–ù–Ü –ü–û–í–¢–û–†–ò–¢–ò
@bot.message_handler(commands=['rep_word'])
def repeat_words(message):
    insert(message)
    curr_date()
    cursor.execute(f'SELECT new_words FROM {idn} WHERE complete_words IS NULL AND data_next_rep = {current_date}')
    complete = cursor.fetchall()
    words = [word[0] for word in complete]
    """
    Explain:
    complete = [('cat',), ('dog',), ('mouse',)]
    
    words = ['cat', 'dog', 'mouse']
    """
    
    if complete:
        bot.send_message(message.chat.id, '–û—Å—å —É—Å—ñ —Å–ª–æ–≤–∞, —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ —Å—å–æ–≥–æ–¥–Ω—ñ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏:<b>\n' + '\n</b>'.join(words), parse_mode='html')
        bot.send_message(message.chat.id, '–ü–∞–º º—è—Ç–∞–π, —É –±–æ—Ç–∞ —Ç–æ–±—ñ –Ω—ñ—á–æ–≥–æ –ø–∏—Å–∞—Ç–∏ –Ω–µ —Ç—Ä–µ–±–∞ (–º–æ–∂–ª–∏–≤–æ —Ü–µ —Ç–∏–º—á–∞—Å–æ–≤–æ ü§∑‚Äç‚ôÇÔ∏è). –Ø –Ω–∞–¥–∞—é —Ç–æ–±—ñ –ø—ñ–¥–∫–∞–∑–∫–∏, —è–∫–∏–º —á–∏–Ω–æ–º –±—É–¥–µ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–æ, —è–∫–µ —î –Ω–∞ —á–µ—Ä–∑—ñ. \n–ö–æ–ª–∏ —Ç–∏ —ó—Ö –≤–∏–∫–æ–Ω–∞—î—à —ñ —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, —Ç–∏ –º–æ–∂–µ—à –≤–∫–∞–∑–∞—Ç–∏, —â–æ —É—Å–ø—ñ—à–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏–≤ —Å–ª–æ–≤–æ (—Ç–æ–±—Ç–æ –Ω–∞–∂–∞—Ç–∏ True‚ù§Ô∏è). \n–Ø–∫—â–æ –∂ —Ç–∏ —Å–ª–æ–≤–æ –Ω–µ –∑–≥–∞–¥–∞–≤, –¥–æ—Ç—Ä–∏–º—É–π—Å—è –ø—ñ–¥–∫–∞–∑–æ–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è, —ñ –≤–∏–±–µ—Ä–∏ Falseüíî.')    
        button = types.InlineKeyboardMarkup()
        button.add(types.InlineKeyboardButton('–ü–æ—á–∞—Ç–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è', callback_data='start_rep_word'))
    else:
        bot.send_message(message.chat.id, '–°—å–æ–≥–æ–¥–Ω—ñ –Ω–µ–º–∞—î —Å–ª—ñ–≤ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è :( \n–ø–æ–≤–µ—Ä—Ç–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞ –∞–±–æ –ø–µ—Ä–µ–≥–ª—è–Ω—å —É—Å—ñ —Å–ª–æ–≤–∞, —è–∫—ñ —Ç–∏ –≤–∏–≤—á–∞—î—à :)')    
  
@bot.message_handler(commands=['start_rep_word'])
def start_repeat_words(message):
    insert(message)
    curr_date()
    cursor.execute(f'SELECT new_words FROM {idn} WHERE complete_words IS NULL AND data_next_rep = {current_date}')
    complete = cursor.fetchall()
    wordso = [word[0] for word in complete]
    # worder –∫–æ–ø—ñ—è —â–æ–± wordso –∑–∞–ª–∏—à–∏–ª–æ—Å—å —Ü—ñ–ª–∏–º, —ñ –º–æ–∂–Ω–∞ –±—É–ª–æ –≤–∏–≤–µ—Å—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—Ö —Å–ª—ñ–≤.
    worder = wordso.copy()
    bot.send_message(message.chat.id, '–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: –Ø–∫—â–æ —Ç–∏ –ø–∞–º º—è—Ç–∞—î—à –ø–µ—Ä–µ–∫–ª–∞–¥ —Ü—å–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∞–ø–∏—à–∏ 4 —Ä–µ—á–µ–Ω–Ω—è –∑ –Ω–∏–º. (///beta_text!///)')
    foo(message)

stat_false = []
def foo(message): 
    global one_word, stat_false
    #–¥–ª—è –∑–∞–ø–∏—Å—É —Å–∫—ñ–ª—å–∫–∏ –Ω–µ–∑–≥–∞–¥–∞–≤ —ñ —Å–∫—ñ–ª—å–∫–∏ –∑–≥–∞–¥–∞–≤
    
    if message.text.lower() == 'end' or len(worder) == 0:
        bot.send_message(message.chat.id, f'–ú–æ–ª–æ–¥–µ—Ü—å! –¢–∏ —á—É–¥–æ–≤–æ –ø–æ—Å—Ç–∞—Ä–∞–≤—Å—è. –°—å–æ–≥–æ–¥–Ω—ñ —Ç–∏ –ø–æ–≤—Ç–æ—Ä–∏–≤ {str(len(wordso))} —Å–ª—ñ–≤ü•≥ \n{str(len(wordso) - len(stat_false))} —Å–ª–æ–≤–∞ —Ç–∏ –∑–≥–∞–¥–∞–≤ —Ç–∞ {str(len(stat_false))} –Ω–µ –∑–≥–∞–¥–∞–≤. \n–ß–µ–∫–∞—é —Ç–µ–±–µ –∑–∞–≤—Ç—Ä–∞ –∞–±–æ –≤ –±—É–¥—å-—è–∫–∏–π —ñ–Ω—à–∏–π —á–∞—Å‚ù§Ô∏è')
        del one_word
        del stat_false
        return
    elif len(wordso):
        button = types.InlineKeyboardMarkup()
        button.add(types.InlineKeyboardButton('True‚ù§Ô∏è', callback_data='true'))
        button.add(types.InlineKeyboardButton('Falseüíî', callback_data='false'))
        
        one_word = worder.pop(0)
        bot.send_message(message.chat.id, f'–ß–∏ –ø–∞–º º—è—Ç–∞—î—à —Ç–∏ —Ü–µ —Å–ª–æ–≤–æ? \n\n<b>{one_word}</b>', parse_mode='html', reply_markup=button)
    else:
        bot.send_message(message.from_user.id, '–¢–∏ —â–µ –Ω–µ –¥–æ–¥–∞–≤ –∂–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞, —è–∫–µ –º–æ–∂–Ω–∞ –ø–æ—á–∞—Ç–∏ –≤—á–∏—Ç–∏.')



    







'''–ü–û–í–¢–û–†–ï–ù–ù–Ø –°–õ–Ü–í –ë–ï–ó –ó–ê–†–ê–•–£–í–ê–ù–ù–Ø, –ü–†–û–°–¢–û –î–õ–Ø –ü–†–û–§–Ü–õ–ê–ö–¢–ò–ö–ò!'''
@bot.message_handler(commands=['teach'])
def teach(message):
    insert(message)
    curr_date()
    cursor.execute(f'SELECT new_words FROM {idn}')
    global wordso, worder
    complete = cursor.fetchall()
    wordso = [word[0] for word in complete]
    # worder –∫–æ–ø—ñ—è —â–æ–± wordso –∑–∞–ª–∏—à–∏–ª–æ—Å—å —Ü—ñ–ª–∏–º, —ñ –º–æ–∂–Ω–∞ –±—É–ª–æ –≤–∏–≤–µ—Å—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—Ö —Å–ª—ñ–≤.
    worder = wordso.copy()
    bot.send_message(message.chat.id, '–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: –Ø–∫—â–æ —Ç–∏ –ø–∞–º º—è—Ç–∞—î—à –ø–µ—Ä–µ–∫–ª–∞–¥ —Ü—å–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∞–ø–∏—à–∏ 4 —Ä–µ—á–µ–Ω–Ω—è –∑ –Ω–∏–º. (///beta_text!///)')
    foo(message)

stat_false = []
def foo(message): 
    global one_word, stat_false
    #–¥–ª—è –∑–∞–ø–∏—Å—É —Å–∫—ñ–ª—å–∫–∏ –Ω–µ–∑–≥–∞–¥–∞–≤ —ñ —Å–∫—ñ–ª—å–∫–∏ –∑–≥–∞–¥–∞–≤
    
    if message.text.lower() == 'end' or len(worder) == 0:
        bot.send_message(message.chat.id, f'–ú–æ–ª–æ–¥–µ—Ü—å! –¢–∏ —á—É–¥–æ–≤–æ –ø–æ—Å—Ç–∞—Ä–∞–≤—Å—è. –°—å–æ–≥–æ–¥–Ω—ñ —Ç–∏ –ø–æ–≤—Ç–æ—Ä–∏–≤ {str(len(wordso))} —Å–ª—ñ–≤ü•≥ \n{str(len(wordso) - len(stat_false))} —Å–ª–æ–≤–∞ —Ç–∏ –∑–≥–∞–¥–∞–≤ —Ç–∞ {str(len(stat_false))} –Ω–µ –∑–≥–∞–¥–∞–≤. \n–ß–µ–∫–∞—é —Ç–µ–±–µ –∑–∞–≤—Ç—Ä–∞ –∞–±–æ –≤ –±—É–¥—å-—è–∫–∏–π —ñ–Ω—à–∏–π —á–∞—Å‚ù§Ô∏è')
        del one_word
        del stat_false
        return
    elif len(wordso):
        button = types.InlineKeyboardMarkup()
        button.add(types.InlineKeyboardButton('True‚ù§Ô∏è', callback_data='tru'))
        button.add(types.InlineKeyboardButton('Falseüíî', callback_data='false'))
        
        one_word = worder.pop(0)
        bot.send_message(message.chat.id, f'–ß–∏ –ø–∞–º º—è—Ç–∞—î—à —Ç–∏ —Ü–µ —Å–ª–æ–≤–æ? \n\n<b>{one_word}</b>', parse_mode='html', reply_markup=button)
    else:
        bot.send_message(message.from_user.id, '–¢–∏ —â–µ –Ω–µ –¥–æ–¥–∞–≤ –∂–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞, —è–∫–µ –º–æ–∂–Ω–∞ –ø–æ—á–∞—Ç–∏ –≤—á–∏—Ç–∏.')



'''CALLBACK –î–õ–Ø BCIX –ö–ù–û–ü–û–ö'''
@bot.callback_query_handler(func=lambda callback: True)
def call_message(callback):
    if callback.data == 'start_rep_word':
      start_repeat_words(callback)
    elif callback.data == 'rep_word':
      repeat_words(callback)
    elif callback.data == 'true':
      bot.send_message(callback.message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü—å! –¶–µ —Å–ª–æ–≤–æ –±—É–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–æ)')
      insert(callback)
      curr_date()
      cursor.execute(f'SELECT amount_of_rep FROM {idn} WHERE new_words = ?', (one_word,))
      amount_rep = [i[0] for i in cursor.fetchone()]
      next_rep = amount_rep+2
      data_next_rep = current_date + datetime.timedelta(days=next_rep)
      cursor.execute(f'UPDATE {idn} SET data_next_rep = {data_next_rep.strftime("%d/%m/%Y")}, amount_of_rep += 1 WHERE new_words = {one_word}')
      conn.commit
      foo(callback.message)
    elif callback.data == 'false':
      bot.send_message(callback.message.chat.id, '–©–æ –∂, —á–∏–º –±—ñ–ª—å—à–µ —Ç–∏ –ø–æ–º–∏–ª—è—î—à—Å—è, —Ç–∏–º –∫—Ä–∞—â–∏–º –±—É–¥–µ –∫—ñ–Ω—Ü–µ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.')
      worder.insert(len(worder)-1, one_word)
      #–î–æ–¥–∞—Ç–∏ —Ü—ñ–ª—ñ —Å–ª–æ–≤–∞, –∞–±–∏ –ø–æ—Ç—ñ–º –¥–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≥–ª—è–¥—É, —è–∫—ñ —Å–ª–æ–≤–∞ –∑–≥–∞–¥–∞–≤, –∞ —è–∫—ñ –Ω—ñ
      if one_word not in stat_false:
        stat_false.append(one_word)
      foo(callback.message)
    elif callback.data == 'tru':
      bot.send_message(callback.message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü—å! –¶–µ —Å–ª–æ–≤–æ –±—É–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–æ‚ù§Ô∏è')
      foo(callback.message)




bot.infinity_polling()